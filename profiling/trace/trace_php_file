#!/bin/bash

# default arguments
title=""
label=""

# get CLI arguments
# source: http://blog.apokalyptik.com/2008/07/07/command-line-arguments-in-bash-scripts/
function getopt() {
  var=""
  wantarg=0
  for (( i=1; i<=$#; i+=1 )); do
    lastvar=$var
    var=${!i}
    if [ "$var" = "" ]; then
        continue
    fi
    echo \ $var | grep -q -- '='
    if [ $? -eq 0 ]; then
      ## -*param=value
      var=$(echo \ $var | sed -r s/'^[ ]*-*'/''/)
      myvar=${var%=*}
      myval=${var#*=}
      eval "${myvar}"="'$myval'"
    else
      echo \ $var | grep -E -q -- '^[ ]*-'
      if [ $? -eq 0 ]; then
        ## -*param$
        var=$(echo \ $var | sed -r s/'^[ ]*-*'/''/)
        eval "${var}"=1
        wantarg=1
      else
        echo \ $var | grep -E -- '^[ ]*-'
        if [ $? -eq 0 ]; then
          # the current one has a dash, so cannot be
          # the argument to the last parameter
          wantarg=0
        fi
        if [ $wantarg -eq 1 ]; then
          # parameter argument
          val=$var
          var=$lastvar
          eval "${var}"="'${val}'"
          wantarg=0
        else
          # parameter
          if [ "${!var}" = "" ]; then
            eval "${var}"=1
          fi
          wantarg=0
        fi
      fi
    fi
  done
}
OIFS=$IFS; IFS=$(echo -e "\n"); getopt $@; IFS=$OIFS

showusage=0
if [[ ! -f "$file" ]]; then
  echo "cannot find file '$file'"
  showusage=1
else
  if [[ "`file -b $file`" != "PHP script text" ]]; then
    echo "not a PHP file: '$file'"
    showusage=1
  else
    if [[ "php -l $file 2>/dev/null | grep 'No syntax errors detected'" == "" ]]; then
      echo "your PHP contains errors!"
      showusage=1
    fi
  fi
fi

if [[ $showusage == 1 ]]; then
  echo "usage: `basename $0` --file PHPFILE.php [--noparent] [--title TEXT] [--label TEXT]"
  echo " --file       The PHP script you want to trace"
  echo " --noparent   Exclude the above script from the trace file and only care about included files"
  exit 1
fi

if [[ "$title" == "" ]]; then
    title="`basename $file`"
fi

if [[ "$label" != "" ]]; then
    label="_$label"
fi

if [[ "$imgname" == "" ]]; then
    imgname=$file
fi

base=`dirname $0`

echo "tracing $file"
php -e "$file" --trace

echo "preprocessing trace file"
#sed -r -i 's#-> (.+):([0-9]+)$#\2    \1#g' single_test.php.xt
#sed -r -i 's#.+contrib/single_test.php.+##g
#s#([0-9]    )( +-> .+):([0-9]+)#\1\3\2#g' single_test.php.xt
#sed -i '/contrib\/single_test.php/D' single_test.php.xt

$base/preprocess_xt.php "$file.xt"

# check that at least one trace file exists
if [[ "$( ls "$file.xt_preprocessed/"*".trace" 2> /dev/null )" == "" ]]; then
    exit
fi

if [[ $noparent ]]; then
    rm "$file".xt_preprocessed/*."$file".trace "$file".xt_preprocessed/*."$file".coverage
fi

echo "generating plots"

$base/plot_preprocessed_trace.php "$file.xt_preprocessed"
